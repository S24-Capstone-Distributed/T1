---
version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - trade-server-network

  kafka:
    #image: ghcr.io/s24-capstone-distributed/tradeserverkafka:latest
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://192.168.144:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "MarketValueTopic:1:1"
    networks:
      - trade-server-network

  hazelcast:
    build: ./HazelCast
    environment:
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
    expose:
      - 5701
      #- 5702
    networks:
      - trade-server-network
    
  blotterservice:
    build: ./BlotterService
    #image: ghcr.io/s24-capstone-distributed/blotterservice:latest
    environment:
      - HTTP_PORT=8010
      - TCP_PORT=8012
      - CLIENT_CONNECTIONS_MAP=clients
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      #- HAZELCAST_SERVERS=hazelcast:5701,hazelcast:5702
      - HAZELCAST_SERVERS=hazelcast:5701
      - MONGO_CONNECTION=mongodb://192.168.8.150:27017
      - MONGO_DB_NAME=tradeServer
      - MONGO_COLLECTION=marketValue
      - HOSTNAME=blotterservice
      - EXTERNAL_HOST=localhost
      - KAFKA_URL=localhost:9092 # this will be changed
    depends_on:
      #- kafka
      - hazelcast
    networks:
      - trade-server-network
    ports:
      - 8010:8010
    expose:
      - 8012:8012
    restart: always

  blotterservice2:
    build: ./BlotterService
    environment:
      - HTTP_PORT=8070
      - TCP_PORT=8072
      - CLIENT_CONNECTIONS_MAP=clients
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=hazelcast:5701
      - MONGO_CONNECTION=mongodb://127.0.0.1:27017
      - MONGO_DB_NAME=client-portfolios
      - MONGO_COLLECTION=market_value
      - HOSTNAME=blotterservice2
      - EXTERNAL_HOST=localhost
    depends_on:
      # - kafka
      - hazelcast
    networks:
      - trade-server-network
    ports:
      - 8070:8070
    expose:
      - 8072
    restart: always

  blotterservice3:
    build: ./BlotterService
    environment:
      - HTTP_PORT=8020
      - TCP_PORT=8022
      - CLIENT_CONNECTIONS_MAP=clients
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=hazelcast:5701
      - MONGO_CONNECTION=mongodb://127.0.0.1:27017
      - MONGO_DB_NAME=client-portfolios
      - MONGO_COLLECTION=market_value
      - HOSTNAME=blotterservice3
      - EXTERNAL_HOST=localhost
    depends_on:
      # - kafka
      - hazelcast
    networks:
      - trade-server-network
    ports:
      - 8020:8020
    expose:
      - 8022
    restart: always

  blotterservice4:
    build: ./BlotterService
    environment:
      - HTTP_PORT=8040
      - TCP_PORT=8042
      - CLIENT_CONNECTIONS_MAP=clients
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=hazelcast:5701
      - MONGO_CONNECTION=mongodb://127.0.0.1:27017
      - MONGO_DB_NAME=client-portfolios
      - MONGO_COLLECTION=market_value
      - HOSTNAME=blotterservice4
      - EXTERNAL_HOST=localhost
    depends_on:
      # - kafka
      - hazelcast
    networks:
      - trade-server-network
    ports:
      - 8040:8040
    expose:
      - 8042
    restart: always

  blotterservice5:
    build: ./BlotterService
    environment:
      - HTTP_PORT=8050
      - TCP_PORT=8052
      - CLIENT_CONNECTIONS_MAP=clients
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=hazelcast:5701
      - MONGO_CONNECTION=mongodb://127.0.0.1:27017
      - MONGO_DB_NAME=client-portfolios
      - MONGO_COLLECTION=market_value
      - HOSTNAME=blotterservice5
      - EXTERNAL_HOST=localhost
    depends_on:
      # - kafka
      - hazelcast
    networks:
      - trade-server-network
    ports:
      - 8050:8050
    expose:
      - 8052
    restart: always
    

  cdrs:
    build: ./ClientDataRoutingService
    #image: ghcr.io/s24-capstone-distributed/cdrs:latest
    depends_on:
     # - kafka
      - hazelcast
      - blotterservice
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - MARKET_VALUE_TOPIC=MarketValueTopic
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_INSTANCE_NAME=CDRS_1
      #- HAZELCAST_SERVERS=127.0.0.1:5701,127.0.0.1:5702
      #- HAZELCAST_SERVERS=hazelcast:5701,hazelcast:5702
      - HAZELCAST_SERVERS=hazelcast:5701
      - CLIENT_CONNECTIONS_MAP=clients
    networks:
      - trade-server-network

  gateway1:
    build: ./Gateway/
    environment:
      - port=6010
      - localUrl=localhost
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=hazelcast:5701
      - CLIENT_CONNECTIONS_MAP=clients
      - KAFKA_URL=localhost:9092 # this will be changed
    expose:
      - 6010:6010
    depends_on:
      - hazelcast
    networks:
      - trade-server-network
    restart: always

  gateway2:
    build: ./Gateway/
    environment:
      - port=6020
      - localUrl=localhost
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=hazelcast:5701
      - CLIENT_CONNECTIONS_MAP=clients
      - KAFKA_URL=localhost:9092 # this will be changed
    depends_on:
      - hazelcast
    expose:
      - 6020:6020
    networks:
      - trade-server-network
    restart: always

  haproxy:
    build: ./HAProxy/
    networks:
      - trade-server-network
    depends_on:
     - gateway1
     - gateway2
    ports:
      - 80:80

  #TESTING PURPOSES ONLY, TO BE REMOVED
  # producer:
  #   build: 
  #     context: ./ClientDataRoutingService/
  #     dockerfile: producer.Dockerfile
  #   depends_on:
  #     - kafka
  #     - haproxy
  #   environment:
  #     - BOOTSTRAP_SERVERS=kafka:29092
  #     - MARKET_VALUE_TOPIC=MarketValueTopic
  #     - CLIENT_ID=17
  #   networks:
  #     - trade-server-network


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    # volumes:
    #   - .\config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - trade-server-network
  
networks:
  trade-server-network: